{"mappings":"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","sources":["src/js/slider.js","src/library.js"],"sourcesContent":["import {\n  URL,\n  IMG_URL,\n  API_KEY,\n  poster_path,\n  movie_id,\n  genre_ids,\n  name,\n} from './themoviedb-service';\nimport { refs } from './refs';\n\nrenderTrendingFilms();\n\nfunction initializeSlider() {\n  $('.slider').slick({\n    arrows: false,\n    centerMode: true,\n    lazyLoad: 'progressive',\n    autoplay: true,\n    autoplaySpeed: 1000,\n    infinite: true,\n    speed: 1000,\n    adaptiveHeigt: true,\n    cssEase: 'ease',\n    slidesToShow: 8,\n    responsive: [\n      {\n        breakpoint: 1100,\n        settings: {\n          slidesToShow: 6,\n          infinite: true,\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 4,\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2,\n        }\n      }]\n    \n  });\n}\n\nfunction renderTrendingFilms() {\n  const trendingUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=2b316c342fe13f9049052886494c29f1`;\n  return fetch(trendingUrl)\n    .then(response => response.json())\n    .then(({ results }) => {\n      return results;\n    })\n    .then(renderSliderFilms)\n    .catch(error => console.log(error));\n}\n\nfunction filmCardSlider(films) {\n  return films\n    .map(({ original_title, poster_path, vote_average, movie_id, name }) => {\n      return `<div class=\"slider__item\"><img class=\"slider-image\" src=${IMG_URL}${poster_path} alt=\"${original_title}${name}\" data-id=\"${movie_id}\" onerror=\"this.onerror=null;this.src=\"https://i.postimg.cc/6pzyh7Wc/pngwing-com.png\";\" /><span class=\"trending-raiting\">${vote_average.toFixed(1)}</span></div>`;\n    })\n    .join('');\n}\n\nfunction renderSliderFilms(articles) {\n  refs.slickSlider.innerHTML = filmCardSlider(articles);\n  initializeSlider();\n}","import './js/slider';\n\n\nimport '../node_modules/@fortawesome/fontawesome-free/js/solid.min';\nimport '../node_modules/@fortawesome/fontawesome-free/js/brands.min';\nimport '../node_modules/@fortawesome/fontawesome-free/js/fontawesome.min';\nimport './js/sliderGlide';\nimport './js/teamModal';\nimport './js/renderTeamModal';\n\n// <<<<<<<<<< FIREBASE >>>>>>>>>>\n\nconsole.log('Firebase!');\n\n// console.log(movieContainer);\n\nimport {\n  hideLoginError,\n  showLoginState,\n  showLoginForm,\n  showApp,\n  showLoginError,\n  btnLogin,\n  btnSignup,\n  btnLogout,\n} from './js/auth-ui';\n\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  onAuthStateChanged,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  setDoc,\n  doc,\n  updateDoc,\n  getDocs,\n} from 'firebase/firestore';\n\nconst firebaseApp = initializeApp({\n  apiKey: 'AIzaSyAQNEF1EZQq4hRQq21AEqmnTA4ysock-bY',\n  authDomain: 'filmoteka-77997.firebaseapp.com',\n  projectId: 'filmoteka-77997',\n  storageBucket: 'filmoteka-77997.appspot.com',\n  messagingSenderId: '555325927364',\n  appId: '1:555325927364:web:5f447ca8d4265db75c3e91',\n  measurementId: 'G-LZ05WYL8RJ',\n});\n\nconst auth = getAuth(firebaseApp);\nconst firestore = getFirestore(firebaseApp);\n\n// ------------------------------------------------------------\nimport { themoviedbApi } from './js/themoviedb-service';\nimport { renderMovies } from './js/renderMovies';\nimport { movieData } from './js/movieClass';\n\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nconst watchedBtn = document.querySelector('.library__watched-btn');\nconst queueBtn = document.querySelector('.library__queue-btn');\nconst libraryList = document.querySelector('.trending-movies__list');\n\nasync function fetchMovies(ids) {\n  const arrayOfPromises = ids.map(async id => {\n    const response = await themoviedbApi.getMovieById(id);\n    return response;\n  });\n\n  const movies = await Promise.all(arrayOfPromises);\n  return movies;\n}\n\nfunction renderUserListItems(movies) {\n  console.log(movies);\n  const markup = movies\n    .map(\n      ({\n        title,\n        poster_path,\n        release_date,\n        genre_ids,\n        gender,\n        name,\n        first_air_date,\n        vote_average,\n        popularity,\n        id,\n      }) => {\n        // const genreCode = `\n        //    <div class=\"movie-card__genre genre card-info\">\n        //     ${movieData.getMovieGenresPreview(genre_ids ? genre_ids : [gender])}\n        //   </div>`;\n        const noGenreCode = ``;\n        const ratingPresent = `\n        <div class=\"movie-card__rating-wrp\">\n        <div class=\"movie-card__rating\">${\n          vote_average ? vote_average.toFixed(1) : popularity.toFixed(1)\n        }</div>\n        </div>\n        `;\n        const ratingAbsent = ``;\n        return `\n\t<li class=\"trending-movie__card\">\n\t\t<img\n\t\t\tclass=\"trending-movie__img\"\n\t\t\tsrc=\"${poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : url}\"\n\t\t\talt=\"${title ? title : name}\"\n\t\t\tloading=\"lazy\"\n      data-id=\"${id}\"\n\t\t/>\n\t\t<div class=\"wrapper\">\n\t\t\t<p class=\"movie-card__title\">\n\t\t\t\t${title ? title.toUpperCase() : name.toUpperCase()} </p>\n\t\t\t\t<div class=\"movie-card__wrp\">\n\t\t\t\t<div class=\"movie-card__genre-wrp\">\n\t\t\t\t${genre_ids ? genreCode : noGenreCode}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"movie-card__year card-info\">${\n          release_date\n            ? parseFloat(release_date) || ''\n            : parseFloat(first_air_date) || ''\n        } </div>\n\t\t\t\t<div class=\"rating-wrapper\">\n\t\t\t\t${vote_average > 0 ? ratingPresent : ratingAbsent}</div>\n\t\t\t\t</div>\n\t\t</div>\n\t</li>`;\n      }\n    )\n    .join('');\n  libraryList.innerHTML = markup;\n}\n\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n// <<<<<<<<<< FIREBASE AUTHENTICATION >>>>>>>>>>\n\n// Login using email/password\nconst loginEmailPassword = async () => {\n  const loginEmail = txtEmail.value;\n  const loginPassword = txtPassword.value;\n\n  try {\n    await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n  } catch (error) {\n    console.log(`There was an error: ${error}`);\n    showLoginError(error);\n  }\n};\n\n// Create new account using email/password and link it with FireSTORE\nconst createAccount = async () => {\n  const email = txtEmail.value;\n  const password = txtPassword.value;\n\n  try {\n    const newUser = await createUserWithEmailAndPassword(auth, email, password);\n\n    const userRef = doc(firestore, 'users', newUser.user.uid);\n    const dbAddUser = async () => {\n      try {\n        await setDoc(userRef, { email: email });\n        console.log('This user has been written to the Firestore');\n      } catch {\n        console.log(`I got an error! ${error}`);\n      }\n    };\n\n    dbAddUser();\n\n    console.log('This user has been written to the database');\n  } catch (error) {\n    console.log(`There was an error: ${error}`);\n    showLoginError(error);\n  }\n};\n\n// Monitor auth state\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      //   console.log(user);\n      showApp();\n      showLoginState(user);\n\n      hideLoginError();\n      // hideLinkError();\n    } else {\n      showLoginForm();\n      lblAuthState.innerHTML = `You're not logged in.`;\n    }\n  });\n};\n\n// Log out\nconst logout = async () => {\n  await signOut(auth);\n};\n\nbtnLogin.addEventListener('click', loginEmailPassword);\nbtnSignup.addEventListener('click', createAccount);\nbtnLogout.addEventListener('click', logout);\n\nmonitorAuthState();\n\nconst watchedListFromDb = async () => {\n  let arr = [];\n\n  const user = auth.currentUser;\n  if (user !== null) {\n    // console.log(user.email);\n\n    console.log('Generating watched list');\n\n    const docRef = collection(firestore, 'users', user.uid, 'watched');\n\n    const getMovies = async () => {\n      try {\n        const moviesIdFromDb = await getDocs(docRef);\n        moviesIdFromDb.forEach(doc => {\n          // console.log(doc.id);\n          arr.push(doc.id);\n        });\n        return arr;\n      } catch {\n        console.log(`I got an error! ${error}`);\n      }\n    };\n    return getMovies();\n  } else {\n    console.log(`You're not logged in.`);\n  }\n};\n\nconst queueListFromDb = async () => {\n  let arr = [];\n\n  const user = auth.currentUser;\n  if (user !== null) {\n    // console.log(user.email);\n\n    console.log('Generating queue list');\n\n    const docRef = collection(firestore, 'users', user.uid, 'queue');\n\n    const getMovies = async () => {\n      try {\n        const moviesIdFromDb = await getDocs(docRef);\n        moviesIdFromDb.forEach(doc => {\n          // console.log(doc.id);\n          arr.push(doc.id);\n        });\n        return arr;\n      } catch {\n        console.log(`I got an error! ${error}`);\n      }\n    };\n    return getMovies();\n  } else {\n    console.log(`You're not logged in.`);\n  }\n};\n\nconst onWatchedBtnClick = async () => {\n  const ids = await watchedListFromDb();\n  try {\n    const movies = await fetchMovies(ids);\n    renderUserListItems(movies);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst onQueueBtnClick = async () => {\n  const ids = await queueListFromDb();\n  // console.log(ids);\n  try {\n    const movies = await fetchMovies(ids);\n    renderUserListItems(movies);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\n"],"names":["$jfYt8","parcelRequire","$57170e076db1eb28$var$renderSliderFilms","articles","$krGWQ","refs","slickSlider","innerHTML","map","original_title","poster_path","poster_path1","vote_average","movie_id","movie_id1","name","name1","IMG_URL","toFixed","join","$","slick","arrows","centerMode","lazyLoad","autoplay","autoplaySpeed","infinite","speed","adaptiveHeigt","cssEase","slidesToShow","responsive","breakpoint","settings","fetch","then","response","json","results","catch","error","console","log","$ce3726a01b8ab25a$var$firebaseApp","$gKkQl","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","$ce3726a01b8ab25a$var$auth","$eyjy7","getAuth","$ce3726a01b8ab25a$var$firestore","$ftYLF","getFirestore","$ce3726a01b8ab25a$var$watchedBtn","document","querySelector","$ce3726a01b8ab25a$var$queueBtn","$ce3726a01b8ab25a$var$libraryList","async","$ce3726a01b8ab25a$var$fetchMovies","ids","arrayOfPromises","id","themoviedbApi","getMovieById","Promise","all","$ce3726a01b8ab25a$var$renderUserListItems","movies","markup","title","release_date","genre_ids","gender","first_air_date","popularity","ratingPresent","url","toUpperCase","genreCode","parseFloat","$cWqtQ","btnLogin","addEventListener","loginEmail","txtEmail","value","loginPassword","txtPassword","signInWithEmailAndPassword","showLoginError","btnSignup","email","password","newUser","createUserWithEmailAndPassword","userRef","doc","user","uid","setDoc","dbAddUser","btnLogout","signOut","onAuthStateChanged","showApp","showLoginState","hideLoginError","showLoginForm","lblAuthState","$ce3726a01b8ab25a$var$monitorAuthState","arr","currentUser","docRef","collection","getDocs","forEach","doc1","push","getMovies","$ce3726a01b8ab25a$var$watchedListFromDb","message","doc2","$ce3726a01b8ab25a$var$queueListFromDb"],"version":3,"file":"library.165f4a6e.js.map"}