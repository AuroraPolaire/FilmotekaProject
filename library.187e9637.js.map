{"mappings":"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","sources":["src/js/slider.js","src/library.js"],"sourcesContent":["import {\n  URL,\n  IMG_URL,\n  API_KEY,\n  poster_path,\n  movie_id,\n  genre_ids,\n  name,\n} from './themoviedb-service';\nimport { refs } from './refs';\n\nrenderTrendingFilms();\n\nfunction initializeSlider() {\n  $('.slider').slick({\n    arrows: false,\n    centerMode: true,\n    lazyLoad: 'progressive',\n    autoplay: true,\n    autoplaySpeed: 1000,\n    infinite: true,\n    speed: 1000,\n    adaptiveHeigt: true,\n    cssEase: 'ease',\n    slidesToShow: 8,\n    responsive: [\n      {\n        breakpoint: 1100,\n        settings: {\n          slidesToShow: 6,\n          infinite: true,\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 4,\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2,\n        }\n      }]\n    \n  });\n}\n\nfunction renderTrendingFilms() {\n  const trendingUrl = `https://api.themoviedb.org/3/trending/all/day?api_key=2b316c342fe13f9049052886494c29f1`;\n  return fetch(trendingUrl)\n    .then(response => response.json())\n    .then(({ results }) => {\n      return results;\n    })\n    .then(renderSliderFilms)\n    .catch(error => console.log(error));\n}\n\nfunction filmCardSlider(films) {\n  return films\n    .map(({ original_title, poster_path, vote_average, movie_id, name }) => {\n      return `<div class=\"slider__item\"><img class=\"slider-image\" src=${IMG_URL}${poster_path} alt=\"${original_title}${name}\" data-id=\"${movie_id}\" onerror=\"this.onerror=null;this.src=\"https://i.postimg.cc/6pzyh7Wc/pngwing-com.png\";\" /><span class=\"trending-raiting\">${vote_average.toFixed(1)}</span></div>`;\n    })\n    .join('');\n}\n\nfunction renderSliderFilms(articles) {\n  refs.slickSlider.innerHTML = filmCardSlider(articles);\n  initializeSlider();\n}","import './js/slider';\n\n\nimport '../node_modules/@fortawesome/fontawesome-free/js/solid.min';\nimport '../node_modules/@fortawesome/fontawesome-free/js/brands.min';\nimport '../node_modules/@fortawesome/fontawesome-free/js/fontawesome.min';\nimport './js/sliderGlide';\nimport './js/teamModal';\nimport './js/renderTeamModal';\n\n// <<<<<<<<<< FIREBASE >>>>>>>>>>\n\nconsole.log('Firebase!');\n\nimport {\n  hideLoginError,\n  showLoginState,\n  showLoginForm,\n  showApp,\n  showLoginError,\n  btnLogin,\n  btnSignup,\n  btnLogout,\n} from './js/auth-ui';\n\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  onAuthStateChanged,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  setDoc,\n  doc,\n  updateDoc,\n  getDocs,\n} from 'firebase/firestore';\n\nconst firebaseApp = initializeApp({\n  apiKey: 'AIzaSyAQNEF1EZQq4hRQq21AEqmnTA4ysock-bY',\n  authDomain: 'filmoteka-77997.firebaseapp.com',\n  projectId: 'filmoteka-77997',\n  storageBucket: 'filmoteka-77997.appspot.com',\n  messagingSenderId: '555325927364',\n  appId: '1:555325927364:web:5f447ca8d4265db75c3e91',\n  measurementId: 'G-LZ05WYL8RJ',\n});\n\nconst auth = getAuth(firebaseApp);\nconst firestore = getFirestore(firebaseApp);\n\n// <<<<<<<<<< FIREBASE AUTHENTICATION >>>>>>>>>>\n\n// Login using email/password\nconst loginEmailPassword = async () => {\n  const loginEmail = txtEmail.value;\n  const loginPassword = txtPassword.value;\n\n  try {\n    await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n  } catch (error) {\n    console.log(`There was an error: ${error}`);\n    showLoginError(error);\n  }\n};\n\n// Create new account using email/password and link it with FireSTORE\nconst createAccount = async () => {\n  const email = txtEmail.value;\n  const password = txtPassword.value;\n\n  try {\n    const newUser = await createUserWithEmailAndPassword(auth, email, password);\n\n    const userRef = doc(firestore, 'users', newUser.user.uid);\n    const dbAddUser = async () => {\n      try {\n        await setDoc(userRef, { email: email });\n        console.log('This user has been written to the Firestore');\n      } catch {\n        console.log(`I got an error! ${error}`);\n      }\n    };\n\n    dbAddUser();\n\n    console.log('This user has been written to the database');\n  } catch (error) {\n    console.log(`There was an error: ${error}`);\n    showLoginError(error);\n  }\n};\n\n// Monitor auth state\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      //   console.log(user);\n      showApp();\n      showLoginState(user);\n\n      hideLoginError();\n      // hideLinkError();\n    } else {\n      showLoginForm();\n      lblAuthState.innerHTML = `You're not logged in.`;\n    }\n  });\n};\n\n// Log out\nconst logout = async () => {\n  await signOut(auth);\n};\n\nbtnLogin.addEventListener('click', loginEmailPassword);\nbtnSignup.addEventListener('click', createAccount);\nbtnLogout.addEventListener('click', logout);\n\nmonitorAuthState();\n\nconst watchedListFromDb = async () => {\n  let arr = [];\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      console.log('Generating watched list');\n\n      const docRef = collection(firestore, 'users', user.uid, 'watched');\n\n      const getMovies = async () => {\n        try {\n          const moviesIdFromDb = await getDocs(docRef);\n          moviesIdFromDb.forEach(doc => {\n            console.log(doc.id);\n            arr.push(Number(doc.id));\n          });\n\n          console.log(arr);\n          return arr;\n        } catch {\n          console.log(`I got an error! ${error}`);\n        }\n      };\n\n      getMovies();\n    } else {\n      showLoginForm();\n      lblAuthState.innerHTML = `You're not logged in.`;\n    }\n  });\n};\n\nconst queueListFromDb = async () => {\n  let arr = [];\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      console.log('Generating queue list');\n\n      const docRef = collection(firestore, 'users', user.uid, 'queue');\n\n      const getMovies = async () => {\n        try {\n          const moviesIdFromDb = await getDocs(docRef);\n          moviesIdFromDb.forEach(doc => {\n            console.log(doc.id);\n            arr.push(doc.id);\n          });\n\n          console.log(arr);\n          return arr;\n        } catch {\n          console.log(`I got an error! ${error}`);\n        }\n      };\n\n      getMovies();\n    } else {\n      showLoginForm();\n      lblAuthState.innerHTML = `You're not logged in.`;\n    }\n  });\n};\n\nconst watchedBtn = document.querySelector('.library__watched-btn');\nconst queueBtn = document.querySelector('.library__queue-btn');\n\nconst onWatchedBtnClick = () => {\n  watchedListFromDb();\n};\n\nconst onQueueBtnClick = () => {\n  queueListFromDb();\n};\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\n"],"names":["$jfYt8","parcelRequire","$57170e076db1eb28$var$renderSliderFilms","articles","$krGWQ","refs","slickSlider","innerHTML","map","original_title","poster_path","poster_path1","vote_average","movie_id","movie_id1","name","name1","IMG_URL","toFixed","join","$","slick","arrows","centerMode","lazyLoad","autoplay","autoplaySpeed","infinite","speed","adaptiveHeigt","cssEase","slidesToShow","responsive","breakpoint","settings","fetch","then","response","json","results","catch","error","console","log","$ce3726a01b8ab25a$var$firebaseApp","$gKkQl","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","$ce3726a01b8ab25a$var$auth","$eyjy7","getAuth","$ce3726a01b8ab25a$var$firestore","$ftYLF","getFirestore","$cWqtQ","btnLogin","addEventListener","async","loginEmail","txtEmail","value","loginPassword","txtPassword","signInWithEmailAndPassword","showLoginError","btnSignup","email","password","newUser","createUserWithEmailAndPassword","userRef","doc","user","uid","setDoc","dbAddUser","btnLogout","signOut","onAuthStateChanged","showApp","showLoginState","hideLoginError","showLoginForm","lblAuthState","$ce3726a01b8ab25a$var$monitorAuthState","$ce3726a01b8ab25a$var$watchedBtn","document","querySelector","$ce3726a01b8ab25a$var$queueBtn","arr","docRef","collection","getDocs","forEach","doc1","id","push","Number","getMovies","$ce3726a01b8ab25a$var$watchedListFromDb","doc2","$ce3726a01b8ab25a$var$queueListFromDb"],"version":3,"file":"library.187e9637.js.map"}